// @method: html
// @usage: @include html(#fff,#222,1em,1.4);

@mixin html($background: #fff, $color: #222, $font-size: 1em, $line-height: 1.4) {
  @include unset-distances;
  position: relative;
  width: 100%;
  height: 100%;

  @if type_of($background) == color {
    background-color: $background;
  } @else if $background {
    @include background($background);
  }
  @if type_of($color) == color {
    color: $color;
  }
  @if (unit($font-size) && unit($line-height)) {
    font-size: $font-size;
    line-height: $line-height;
  }
}

// @method: sticky-footer
// @usage: @include sticky-footer(100px,20px,300px);

@mixin sticky-footer($footer-height: 100px, $main-bottom-padding: 40px, $main-min-height: 450px, $main: #main, $footer: footer) {
  @if (unit($footer-height) && unit($main-bottom-padding) && unit($main-min-height)) {
    min-height: 100%;
    position: relative;

    #{$main} {
      position: relative;
      min-height: $main-min-height;
      padding-bottom: ceil(strip-units($footer-height) + strip-units($main-bottom-padding)) * 1px;
    }
    #{$footer} {
      position: absolute;
      height: $footer-height;
      width: 100%;
      bottom: 0;
    }
  }
}

// @method size
// @usage @include size(10px, 1px);
@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

// @method position
// @usage @include absolute(top 0 left 1em);

@mixin position($position, $args) {
  @each $o in top right bottom left {
    $i: index($args, $o);

    @if $i and $i + 1< = length($args) and type-of(nth($args, $i + 1)) == number  {
      #{$o}: nth($args, $i + 1);
    }
  }

  position: $position;
}

@mixin absolute($args) {
  @include position("absolute", $args);
}

@mixin fixed($args) {
  @include position("fixed", $args);
}

@mixin relative($args) {
  @include position("relative", $args);
}
